// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/maprdb-server.proto

package private_maprdb_go_client

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

//*
// RPC response error codes. POSIX error codes are used where appropriate.
//
// Extended error codes, those that can not be mapped to a POSIX error code, begins at 256.
type ErrorCode int32

const (
	//*
	// No error, operation completed successfully.
	ErrorCode_NO_ERROR ErrorCode = 0
	//*
	// Specified table does not exist
	ErrorCode_TABLE_NOT_FOUND ErrorCode = 2
	//*
	// An I/O error occurred on the server(s)
	ErrorCode_IO_ERROR ErrorCode = 5
	//*
	// The operation resulted in server(s) running out of memory
	ErrorCode_OUT_OF_MEMORY ErrorCode = 12
	//*
	// User does not have sufficient permission to execute the operation.
	ErrorCode_ACCESS_DENIED ErrorCode = 13
	//*
	// The specified table already exists.
	ErrorCode_TABLE_ALREADY_EXISTS ErrorCode = 17
	//*
	// One or more request parameter was invalid.
	// This error code should be used whenever a request parameter was unrecognized or outside a valid domain.
	// For example, an unrecognized enum value was supplied for InsertMode.
	ErrorCode_INVALID_ARGUMENT ErrorCode = 22
	//*
	// Requested operation is not supported by this server.
	// This error code should be used if a known, valid operation is not supported by the current service.
	ErrorCode_UNSUPPORTED_OPERATION ErrorCode = 38
	//*
	// Catch-all for all undefined errors on server.
	ErrorCode_UNKNOWN_ERROR ErrorCode = 256
	//
	// Extended error codes.
	//
	// TODO: renumber the error codes before release
	//
	ErrorCode_UNKNOWN_PAYLOAD_ENCODING ErrorCode = 260
	ErrorCode_CLUSTER_NOT_FOUND        ErrorCode = 270
	ErrorCode_PATH_NOT_FOUND           ErrorCode = 271
	ErrorCode_DOCUMENT_ALREADY_EXISTS  ErrorCode = 280
	ErrorCode_DOCUMENT_NOT_FOUND       ErrorCode = 281
	ErrorCode_ENCODING_ERROR           ErrorCode = 290
	ErrorCode_DECODING_ERROR           ErrorCode = 291
	ErrorCode_ILLEGAL_MUTATION         ErrorCode = 292
)

var ErrorCode_name = map[int32]string{
	0:   "NO_ERROR",
	2:   "TABLE_NOT_FOUND",
	5:   "IO_ERROR",
	12:  "OUT_OF_MEMORY",
	13:  "ACCESS_DENIED",
	17:  "TABLE_ALREADY_EXISTS",
	22:  "INVALID_ARGUMENT",
	38:  "UNSUPPORTED_OPERATION",
	256: "UNKNOWN_ERROR",
	260: "UNKNOWN_PAYLOAD_ENCODING",
	270: "CLUSTER_NOT_FOUND",
	271: "PATH_NOT_FOUND",
	280: "DOCUMENT_ALREADY_EXISTS",
	281: "DOCUMENT_NOT_FOUND",
	290: "ENCODING_ERROR",
	291: "DECODING_ERROR",
	292: "ILLEGAL_MUTATION",
}

var ErrorCode_value = map[string]int32{
	"NO_ERROR":                 0,
	"TABLE_NOT_FOUND":          2,
	"IO_ERROR":                 5,
	"OUT_OF_MEMORY":            12,
	"ACCESS_DENIED":            13,
	"TABLE_ALREADY_EXISTS":     17,
	"INVALID_ARGUMENT":         22,
	"UNSUPPORTED_OPERATION":    38,
	"UNKNOWN_ERROR":            256,
	"UNKNOWN_PAYLOAD_ENCODING": 260,
	"CLUSTER_NOT_FOUND":        270,
	"PATH_NOT_FOUND":           271,
	"DOCUMENT_ALREADY_EXISTS":  280,
	"DOCUMENT_NOT_FOUND":       281,
	"ENCODING_ERROR":           290,
	"DECODING_ERROR":           291,
	"ILLEGAL_MUTATION":         292,
}

func (x ErrorCode) String() string {
	return proto.EnumName(ErrorCode_name, int32(x))
}

func (ErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{0}
}

//*
// ENUM indicating the encoding scheme of the OJAI objects in RPC request/response.
// Currently only JSON encoding is supported.
type PayloadEncoding int32

const (
	//*
	// Invalid, unknown encoding
	PayloadEncoding_UNKNOWN_ENCODING PayloadEncoding = 0
	//*
	// Payload is encoded as JSON string
	PayloadEncoding_JSON_ENCODING PayloadEncoding = 1
)

var PayloadEncoding_name = map[int32]string{
	0: "UNKNOWN_ENCODING",
	1: "JSON_ENCODING",
}

var PayloadEncoding_value = map[string]int32{
	"UNKNOWN_ENCODING": 0,
	"JSON_ENCODING":    1,
}

func (x PayloadEncoding) String() string {
	return proto.EnumName(PayloadEncoding_name, int32(x))
}

func (PayloadEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{1}
}

type InsertMode int32

const (
	//*
	// Invalid, unknown mode
	InsertMode_UNKNOWN_MODE InsertMode = 0
	//*
	// Insert this document WHETHER OR NOT a document with the same _id exist in the store
	InsertMode_INSERT_OR_REPLACE InsertMode = 1
	//*
	// Insert this document ONLY IF another document with the same _id DOES NOT exist in the store
	InsertMode_INSERT InsertMode = 2
	//*
	// Insert this document ONLY IF a document with the same _id EXISTS in the store
	InsertMode_REPLACE InsertMode = 3
)

var InsertMode_name = map[int32]string{
	0: "UNKNOWN_MODE",
	1: "INSERT_OR_REPLACE",
	2: "INSERT",
	3: "REPLACE",
}

var InsertMode_value = map[string]int32{
	"UNKNOWN_MODE":      0,
	"INSERT_OR_REPLACE": 1,
	"INSERT":            2,
	"REPLACE":           3,
}

func (x InsertMode) String() string {
	return proto.EnumName(InsertMode_name, int32(x))
}

func (InsertMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{2}
}

type FindResponseType int32

const (
	//*
	// Invalid, unknown type
	FindResponseType_UNKNOWN_TYPE FindResponseType = 0
	//*
	// Indicates that the current response contains a QueryResult Document
	FindResponseType_RESULT_DOCUMENT FindResponseType = 1
	//*
	// Indicates that the current response contains a Query plan
	FindResponseType_QUERY_PLAN FindResponseType = 2
)

var FindResponseType_name = map[int32]string{
	0: "UNKNOWN_TYPE",
	1: "RESULT_DOCUMENT",
	2: "QUERY_PLAN",
}

var FindResponseType_value = map[string]int32{
	"UNKNOWN_TYPE":    0,
	"RESULT_DOCUMENT": 1,
	"QUERY_PLAN":      2,
}

func (x FindResponseType) String() string {
	return proto.EnumName(FindResponseType_name, int32(x))
}

func (FindResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{3}
}

//*
// Protobuf message that encapsulates RPC operation error, if any.
// Each RPC response should include RpcError message, with `NO_ERROR` indicating success
type RpcError struct {
	//*
	// Error code for the RPC. `NO_ERROR` indicates RPC completed successfully
	ErrCode ErrorCode `protobuf:"varint,1,opt,name=err_code,json=errCode,proto3,enum=com.mapr.data.db.ErrorCode" json:"err_code,omitempty"`
	//*
	// NULL if `err` is `NO_ERROR`
	ErrorMessage string `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	//*
	// NULL if `err` is `NO_ERROR`
	JavaStackTrace       string   `protobuf:"bytes,3,opt,name=java_stack_trace,json=javaStackTrace,proto3" json:"java_stack_trace,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RpcError) Reset()         { *m = RpcError{} }
func (m *RpcError) String() string { return proto.CompactTextString(m) }
func (*RpcError) ProtoMessage()    {}
func (*RpcError) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{0}
}

func (m *RpcError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RpcError.Unmarshal(m, b)
}
func (m *RpcError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RpcError.Marshal(b, m, deterministic)
}
func (m *RpcError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RpcError.Merge(m, src)
}
func (m *RpcError) XXX_Size() int {
	return xxx_messageInfo_RpcError.Size(m)
}
func (m *RpcError) XXX_DiscardUnknown() {
	xxx_messageInfo_RpcError.DiscardUnknown(m)
}

var xxx_messageInfo_RpcError proto.InternalMessageInfo

func (m *RpcError) GetErrCode() ErrorCode {
	if m != nil {
		return m.ErrCode
	}
	return ErrorCode_NO_ERROR
}

func (m *RpcError) GetErrorMessage() string {
	if m != nil {
		return m.ErrorMessage
	}
	return ""
}

func (m *RpcError) GetJavaStackTrace() string {
	if m != nil {
		return m.JavaStackTrace
	}
	return ""
}

type PingRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingRequest) Reset()         { *m = PingRequest{} }
func (m *PingRequest) String() string { return proto.CompactTextString(m) }
func (*PingRequest) ProtoMessage()    {}
func (*PingRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{1}
}

func (m *PingRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingRequest.Unmarshal(m, b)
}
func (m *PingRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingRequest.Marshal(b, m, deterministic)
}
func (m *PingRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingRequest.Merge(m, src)
}
func (m *PingRequest) XXX_Size() int {
	return xxx_messageInfo_PingRequest.Size(m)
}
func (m *PingRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_PingRequest.DiscardUnknown(m)
}

var xxx_messageInfo_PingRequest proto.InternalMessageInfo

type PingResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PingResponse) Reset()         { *m = PingResponse{} }
func (m *PingResponse) String() string { return proto.CompactTextString(m) }
func (*PingResponse) ProtoMessage()    {}
func (*PingResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{2}
}

func (m *PingResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PingResponse.Unmarshal(m, b)
}
func (m *PingResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PingResponse.Marshal(b, m, deterministic)
}
func (m *PingResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PingResponse.Merge(m, src)
}
func (m *PingResponse) XXX_Size() int {
	return xxx_messageInfo_PingResponse.Size(m)
}
func (m *PingResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_PingResponse.DiscardUnknown(m)
}

var xxx_messageInfo_PingResponse proto.InternalMessageInfo

type CreateTableRequest struct {
	TablePath            string   `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateTableRequest) Reset()         { *m = CreateTableRequest{} }
func (m *CreateTableRequest) String() string { return proto.CompactTextString(m) }
func (*CreateTableRequest) ProtoMessage()    {}
func (*CreateTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{3}
}

func (m *CreateTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTableRequest.Unmarshal(m, b)
}
func (m *CreateTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTableRequest.Marshal(b, m, deterministic)
}
func (m *CreateTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTableRequest.Merge(m, src)
}
func (m *CreateTableRequest) XXX_Size() int {
	return xxx_messageInfo_CreateTableRequest.Size(m)
}
func (m *CreateTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTableRequest proto.InternalMessageInfo

func (m *CreateTableRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

type CreateTableResponse struct {
	//*
	// `NO_ERROR` - if the table was created successfully,
	// `TABLE_ALREADY_EXISTS` - if a table with the same path already exists
	Error                *RpcError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateTableResponse) Reset()         { *m = CreateTableResponse{} }
func (m *CreateTableResponse) String() string { return proto.CompactTextString(m) }
func (*CreateTableResponse) ProtoMessage()    {}
func (*CreateTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{4}
}

func (m *CreateTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateTableResponse.Unmarshal(m, b)
}
func (m *CreateTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateTableResponse.Marshal(b, m, deterministic)
}
func (m *CreateTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateTableResponse.Merge(m, src)
}
func (m *CreateTableResponse) XXX_Size() int {
	return xxx_messageInfo_CreateTableResponse.Size(m)
}
func (m *CreateTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateTableResponse proto.InternalMessageInfo

func (m *CreateTableResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteTableRequest struct {
	TablePath            string   `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteTableRequest) Reset()         { *m = DeleteTableRequest{} }
func (m *DeleteTableRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteTableRequest) ProtoMessage()    {}
func (*DeleteTableRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{5}
}

func (m *DeleteTableRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTableRequest.Unmarshal(m, b)
}
func (m *DeleteTableRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTableRequest.Marshal(b, m, deterministic)
}
func (m *DeleteTableRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTableRequest.Merge(m, src)
}
func (m *DeleteTableRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteTableRequest.Size(m)
}
func (m *DeleteTableRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTableRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTableRequest proto.InternalMessageInfo

func (m *DeleteTableRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

type DeleteTableResponse struct {
	//*
	// `NO_ERROR` - if the table exists
	// `TABLE_NOT_FOUND` - if the table does not exist
	Error                *RpcError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeleteTableResponse) Reset()         { *m = DeleteTableResponse{} }
func (m *DeleteTableResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteTableResponse) ProtoMessage()    {}
func (*DeleteTableResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{6}
}

func (m *DeleteTableResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteTableResponse.Unmarshal(m, b)
}
func (m *DeleteTableResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteTableResponse.Marshal(b, m, deterministic)
}
func (m *DeleteTableResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteTableResponse.Merge(m, src)
}
func (m *DeleteTableResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteTableResponse.Size(m)
}
func (m *DeleteTableResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteTableResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteTableResponse proto.InternalMessageInfo

func (m *DeleteTableResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

type TableExistsRequest struct {
	TablePath            string   `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TableExistsRequest) Reset()         { *m = TableExistsRequest{} }
func (m *TableExistsRequest) String() string { return proto.CompactTextString(m) }
func (*TableExistsRequest) ProtoMessage()    {}
func (*TableExistsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{7}
}

func (m *TableExistsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableExistsRequest.Unmarshal(m, b)
}
func (m *TableExistsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableExistsRequest.Marshal(b, m, deterministic)
}
func (m *TableExistsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableExistsRequest.Merge(m, src)
}
func (m *TableExistsRequest) XXX_Size() int {
	return xxx_messageInfo_TableExistsRequest.Size(m)
}
func (m *TableExistsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TableExistsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TableExistsRequest proto.InternalMessageInfo

func (m *TableExistsRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

type TableExistsResponse struct {
	//*
	// `NO_ERROR` - if the table exists
	// `TABLE_NOT_FOUND` - if the table does not exist
	Error                *RpcError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *TableExistsResponse) Reset()         { *m = TableExistsResponse{} }
func (m *TableExistsResponse) String() string { return proto.CompactTextString(m) }
func (*TableExistsResponse) ProtoMessage()    {}
func (*TableExistsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{8}
}

func (m *TableExistsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TableExistsResponse.Unmarshal(m, b)
}
func (m *TableExistsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TableExistsResponse.Marshal(b, m, deterministic)
}
func (m *TableExistsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TableExistsResponse.Merge(m, src)
}
func (m *TableExistsResponse) XXX_Size() int {
	return xxx_messageInfo_TableExistsResponse.Size(m)
}
func (m *TableExistsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TableExistsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TableExistsResponse proto.InternalMessageInfo

func (m *TableExistsResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

type InsertOrReplaceRequest struct {
	TablePath       string          `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	InsertMode      InsertMode      `protobuf:"varint,2,opt,name=insert_mode,json=insertMode,proto3,enum=com.mapr.data.db.InsertMode" json:"insert_mode,omitempty"`
	PayloadEncoding PayloadEncoding `protobuf:"varint,3,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	// Types that are valid to be assigned to Condition:
	//	*InsertOrReplaceRequest_JsonCondition
	Condition isInsertOrReplaceRequest_Condition `protobuf_oneof:"condition"`
	// Types that are valid to be assigned to Data:
	//	*InsertOrReplaceRequest_JsonDocument
	Data                 isInsertOrReplaceRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *InsertOrReplaceRequest) Reset()         { *m = InsertOrReplaceRequest{} }
func (m *InsertOrReplaceRequest) String() string { return proto.CompactTextString(m) }
func (*InsertOrReplaceRequest) ProtoMessage()    {}
func (*InsertOrReplaceRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{9}
}

func (m *InsertOrReplaceRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertOrReplaceRequest.Unmarshal(m, b)
}
func (m *InsertOrReplaceRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertOrReplaceRequest.Marshal(b, m, deterministic)
}
func (m *InsertOrReplaceRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertOrReplaceRequest.Merge(m, src)
}
func (m *InsertOrReplaceRequest) XXX_Size() int {
	return xxx_messageInfo_InsertOrReplaceRequest.Size(m)
}
func (m *InsertOrReplaceRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertOrReplaceRequest.DiscardUnknown(m)
}

var xxx_messageInfo_InsertOrReplaceRequest proto.InternalMessageInfo

func (m *InsertOrReplaceRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

func (m *InsertOrReplaceRequest) GetInsertMode() InsertMode {
	if m != nil {
		return m.InsertMode
	}
	return InsertMode_UNKNOWN_MODE
}

func (m *InsertOrReplaceRequest) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

type isInsertOrReplaceRequest_Condition interface {
	isInsertOrReplaceRequest_Condition()
}

type InsertOrReplaceRequest_JsonCondition struct {
	JsonCondition string `protobuf:"bytes,4,opt,name=json_condition,json=jsonCondition,proto3,oneof"`
}

func (*InsertOrReplaceRequest_JsonCondition) isInsertOrReplaceRequest_Condition() {}

func (m *InsertOrReplaceRequest) GetCondition() isInsertOrReplaceRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *InsertOrReplaceRequest) GetJsonCondition() string {
	if x, ok := m.GetCondition().(*InsertOrReplaceRequest_JsonCondition); ok {
		return x.JsonCondition
	}
	return ""
}

type isInsertOrReplaceRequest_Data interface {
	isInsertOrReplaceRequest_Data()
}

type InsertOrReplaceRequest_JsonDocument struct {
	JsonDocument string `protobuf:"bytes,30,opt,name=json_document,json=jsonDocument,proto3,oneof"`
}

func (*InsertOrReplaceRequest_JsonDocument) isInsertOrReplaceRequest_Data() {}

func (m *InsertOrReplaceRequest) GetData() isInsertOrReplaceRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *InsertOrReplaceRequest) GetJsonDocument() string {
	if x, ok := m.GetData().(*InsertOrReplaceRequest_JsonDocument); ok {
		return x.JsonDocument
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*InsertOrReplaceRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _InsertOrReplaceRequest_OneofMarshaler, _InsertOrReplaceRequest_OneofUnmarshaler, _InsertOrReplaceRequest_OneofSizer, []interface{}{
		(*InsertOrReplaceRequest_JsonCondition)(nil),
		(*InsertOrReplaceRequest_JsonDocument)(nil),
	}
}

func _InsertOrReplaceRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*InsertOrReplaceRequest)
	// condition
	switch x := m.Condition.(type) {
	case *InsertOrReplaceRequest_JsonCondition:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonCondition)
	case nil:
	default:
		return fmt.Errorf("InsertOrReplaceRequest.Condition has unexpected type %T", x)
	}
	// data
	switch x := m.Data.(type) {
	case *InsertOrReplaceRequest_JsonDocument:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonDocument)
	case nil:
	default:
		return fmt.Errorf("InsertOrReplaceRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _InsertOrReplaceRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*InsertOrReplaceRequest)
	switch tag {
	case 4: // condition.json_condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &InsertOrReplaceRequest_JsonCondition{x}
		return true, err
	case 30: // data.json_document
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &InsertOrReplaceRequest_JsonDocument{x}
		return true, err
	default:
		return false, nil
	}
}

func _InsertOrReplaceRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*InsertOrReplaceRequest)
	// condition
	switch x := m.Condition.(type) {
	case *InsertOrReplaceRequest_JsonCondition:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonCondition)))
		n += len(x.JsonCondition)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// data
	switch x := m.Data.(type) {
	case *InsertOrReplaceRequest_JsonDocument:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonDocument)))
		n += len(x.JsonDocument)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type InsertOrReplaceResponse struct {
	Error                *RpcError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *InsertOrReplaceResponse) Reset()         { *m = InsertOrReplaceResponse{} }
func (m *InsertOrReplaceResponse) String() string { return proto.CompactTextString(m) }
func (*InsertOrReplaceResponse) ProtoMessage()    {}
func (*InsertOrReplaceResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{10}
}

func (m *InsertOrReplaceResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_InsertOrReplaceResponse.Unmarshal(m, b)
}
func (m *InsertOrReplaceResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_InsertOrReplaceResponse.Marshal(b, m, deterministic)
}
func (m *InsertOrReplaceResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_InsertOrReplaceResponse.Merge(m, src)
}
func (m *InsertOrReplaceResponse) XXX_Size() int {
	return xxx_messageInfo_InsertOrReplaceResponse.Size(m)
}
func (m *InsertOrReplaceResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_InsertOrReplaceResponse.DiscardUnknown(m)
}

var xxx_messageInfo_InsertOrReplaceResponse proto.InternalMessageInfo

func (m *InsertOrReplaceResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

type FindByIdRequest struct {
	TablePath       string          `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	PayloadEncoding PayloadEncoding `protobuf:"varint,2,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	//*
	// <b>[Optional]</b><p/>
	// List of OJAI FieldPaths that should be included in the returned document
	Projections []string `protobuf:"bytes,3,rep,name=projections,proto3" json:"projections,omitempty"`
	// Types that are valid to be assigned to Condition:
	//	*FindByIdRequest_JsonCondition
	Condition isFindByIdRequest_Condition `protobuf_oneof:"condition"`
	// Types that are valid to be assigned to Document:
	//	*FindByIdRequest_JsonDocument
	Document             isFindByIdRequest_Document `protobuf_oneof:"document"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *FindByIdRequest) Reset()         { *m = FindByIdRequest{} }
func (m *FindByIdRequest) String() string { return proto.CompactTextString(m) }
func (*FindByIdRequest) ProtoMessage()    {}
func (*FindByIdRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{11}
}

func (m *FindByIdRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIdRequest.Unmarshal(m, b)
}
func (m *FindByIdRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIdRequest.Marshal(b, m, deterministic)
}
func (m *FindByIdRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIdRequest.Merge(m, src)
}
func (m *FindByIdRequest) XXX_Size() int {
	return xxx_messageInfo_FindByIdRequest.Size(m)
}
func (m *FindByIdRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIdRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIdRequest proto.InternalMessageInfo

func (m *FindByIdRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

func (m *FindByIdRequest) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

func (m *FindByIdRequest) GetProjections() []string {
	if m != nil {
		return m.Projections
	}
	return nil
}

type isFindByIdRequest_Condition interface {
	isFindByIdRequest_Condition()
}

type FindByIdRequest_JsonCondition struct {
	JsonCondition string `protobuf:"bytes,4,opt,name=json_condition,json=jsonCondition,proto3,oneof"`
}

func (*FindByIdRequest_JsonCondition) isFindByIdRequest_Condition() {}

func (m *FindByIdRequest) GetCondition() isFindByIdRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *FindByIdRequest) GetJsonCondition() string {
	if x, ok := m.GetCondition().(*FindByIdRequest_JsonCondition); ok {
		return x.JsonCondition
	}
	return ""
}

type isFindByIdRequest_Document interface {
	isFindByIdRequest_Document()
}

type FindByIdRequest_JsonDocument struct {
	JsonDocument string `protobuf:"bytes,5,opt,name=json_document,json=jsonDocument,proto3,oneof"`
}

func (*FindByIdRequest_JsonDocument) isFindByIdRequest_Document() {}

func (m *FindByIdRequest) GetDocument() isFindByIdRequest_Document {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *FindByIdRequest) GetJsonDocument() string {
	if x, ok := m.GetDocument().(*FindByIdRequest_JsonDocument); ok {
		return x.JsonDocument
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FindByIdRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FindByIdRequest_OneofMarshaler, _FindByIdRequest_OneofUnmarshaler, _FindByIdRequest_OneofSizer, []interface{}{
		(*FindByIdRequest_JsonCondition)(nil),
		(*FindByIdRequest_JsonDocument)(nil),
	}
}

func _FindByIdRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FindByIdRequest)
	// condition
	switch x := m.Condition.(type) {
	case *FindByIdRequest_JsonCondition:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonCondition)
	case nil:
	default:
		return fmt.Errorf("FindByIdRequest.Condition has unexpected type %T", x)
	}
	// document
	switch x := m.Document.(type) {
	case *FindByIdRequest_JsonDocument:
		b.EncodeVarint(5<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonDocument)
	case nil:
	default:
		return fmt.Errorf("FindByIdRequest.Document has unexpected type %T", x)
	}
	return nil
}

func _FindByIdRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FindByIdRequest)
	switch tag {
	case 4: // condition.json_condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &FindByIdRequest_JsonCondition{x}
		return true, err
	case 5: // document.json_document
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Document = &FindByIdRequest_JsonDocument{x}
		return true, err
	default:
		return false, nil
	}
}

func _FindByIdRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FindByIdRequest)
	// condition
	switch x := m.Condition.(type) {
	case *FindByIdRequest_JsonCondition:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonCondition)))
		n += len(x.JsonCondition)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// document
	switch x := m.Document.(type) {
	case *FindByIdRequest_JsonDocument:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonDocument)))
		n += len(x.JsonDocument)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FindByIdResponse struct {
	//*
	// `NO_ERROR` - if a document with the specified `_id` was found
	// `DOCUMENT_NOT_FOUND` - if the document with the specified `_id` does not exist
	Error           *RpcError       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	PayloadEncoding PayloadEncoding `protobuf:"varint,2,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*FindByIdResponse_JsonDocument
	Data                 isFindByIdResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *FindByIdResponse) Reset()         { *m = FindByIdResponse{} }
func (m *FindByIdResponse) String() string { return proto.CompactTextString(m) }
func (*FindByIdResponse) ProtoMessage()    {}
func (*FindByIdResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{12}
}

func (m *FindByIdResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindByIdResponse.Unmarshal(m, b)
}
func (m *FindByIdResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindByIdResponse.Marshal(b, m, deterministic)
}
func (m *FindByIdResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindByIdResponse.Merge(m, src)
}
func (m *FindByIdResponse) XXX_Size() int {
	return xxx_messageInfo_FindByIdResponse.Size(m)
}
func (m *FindByIdResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindByIdResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindByIdResponse proto.InternalMessageInfo

func (m *FindByIdResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FindByIdResponse) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

type isFindByIdResponse_Data interface {
	isFindByIdResponse_Data()
}

type FindByIdResponse_JsonDocument struct {
	JsonDocument string `protobuf:"bytes,30,opt,name=json_document,json=jsonDocument,proto3,oneof"`
}

func (*FindByIdResponse_JsonDocument) isFindByIdResponse_Data() {}

func (m *FindByIdResponse) GetData() isFindByIdResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FindByIdResponse) GetJsonDocument() string {
	if x, ok := m.GetData().(*FindByIdResponse_JsonDocument); ok {
		return x.JsonDocument
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FindByIdResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FindByIdResponse_OneofMarshaler, _FindByIdResponse_OneofUnmarshaler, _FindByIdResponse_OneofSizer, []interface{}{
		(*FindByIdResponse_JsonDocument)(nil),
	}
}

func _FindByIdResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FindByIdResponse)
	// data
	switch x := m.Data.(type) {
	case *FindByIdResponse_JsonDocument:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonDocument)
	case nil:
	default:
		return fmt.Errorf("FindByIdResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _FindByIdResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FindByIdResponse)
	switch tag {
	case 30: // data.json_document
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &FindByIdResponse_JsonDocument{x}
		return true, err
	default:
		return false, nil
	}
}

func _FindByIdResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FindByIdResponse)
	// data
	switch x := m.Data.(type) {
	case *FindByIdResponse_JsonDocument:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonDocument)))
		n += len(x.JsonDocument)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type FindRequest struct {
	TablePath        string          `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	PayloadEncoding  PayloadEncoding `protobuf:"varint,2,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	IncludeQueryPlan bool            `protobuf:"varint,3,opt,name=include_query_plan,json=includeQueryPlan,proto3" json:"include_query_plan,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*FindRequest_JsonQuery
	Data                 isFindRequest_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *FindRequest) Reset()         { *m = FindRequest{} }
func (m *FindRequest) String() string { return proto.CompactTextString(m) }
func (*FindRequest) ProtoMessage()    {}
func (*FindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{13}
}

func (m *FindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRequest.Unmarshal(m, b)
}
func (m *FindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRequest.Marshal(b, m, deterministic)
}
func (m *FindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRequest.Merge(m, src)
}
func (m *FindRequest) XXX_Size() int {
	return xxx_messageInfo_FindRequest.Size(m)
}
func (m *FindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindRequest proto.InternalMessageInfo

func (m *FindRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

func (m *FindRequest) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

func (m *FindRequest) GetIncludeQueryPlan() bool {
	if m != nil {
		return m.IncludeQueryPlan
	}
	return false
}

type isFindRequest_Data interface {
	isFindRequest_Data()
}

type FindRequest_JsonQuery struct {
	JsonQuery string `protobuf:"bytes,4,opt,name=json_query,json=jsonQuery,proto3,oneof"`
}

func (*FindRequest_JsonQuery) isFindRequest_Data() {}

func (m *FindRequest) GetData() isFindRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FindRequest) GetJsonQuery() string {
	if x, ok := m.GetData().(*FindRequest_JsonQuery); ok {
		return x.JsonQuery
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FindRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FindRequest_OneofMarshaler, _FindRequest_OneofUnmarshaler, _FindRequest_OneofSizer, []interface{}{
		(*FindRequest_JsonQuery)(nil),
	}
}

func _FindRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FindRequest)
	// data
	switch x := m.Data.(type) {
	case *FindRequest_JsonQuery:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonQuery)
	case nil:
	default:
		return fmt.Errorf("FindRequest.Data has unexpected type %T", x)
	}
	return nil
}

func _FindRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FindRequest)
	switch tag {
	case 4: // data.json_query
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &FindRequest_JsonQuery{x}
		return true, err
	default:
		return false, nil
	}
}

func _FindRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FindRequest)
	// data
	switch x := m.Data.(type) {
	case *FindRequest_JsonQuery:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonQuery)))
		n += len(x.JsonQuery)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

//*
// Results of Find() RPCs are streamed to the clients, with each FindResponse containing
// one OJAI document. If the `include_query_plan` in FindRequest was set to true, the first
// FindResponse will contain the query plan instead of OJAI Document
type FindResponse struct {
	Error           *RpcError       `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	PayloadEncoding PayloadEncoding `protobuf:"varint,2,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	//*
	// Indicates the type of this response
	Type FindResponseType `protobuf:"varint,3,opt,name=type,proto3,enum=com.mapr.data.db.FindResponseType" json:"type,omitempty"`
	// Types that are valid to be assigned to Data:
	//	*FindResponse_JsonResponse
	Data                 isFindResponse_Data `protobuf_oneof:"data"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *FindResponse) Reset()         { *m = FindResponse{} }
func (m *FindResponse) String() string { return proto.CompactTextString(m) }
func (*FindResponse) ProtoMessage()    {}
func (*FindResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{14}
}

func (m *FindResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindResponse.Unmarshal(m, b)
}
func (m *FindResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindResponse.Marshal(b, m, deterministic)
}
func (m *FindResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindResponse.Merge(m, src)
}
func (m *FindResponse) XXX_Size() int {
	return xxx_messageInfo_FindResponse.Size(m)
}
func (m *FindResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FindResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FindResponse proto.InternalMessageInfo

func (m *FindResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *FindResponse) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

func (m *FindResponse) GetType() FindResponseType {
	if m != nil {
		return m.Type
	}
	return FindResponseType_UNKNOWN_TYPE
}

type isFindResponse_Data interface {
	isFindResponse_Data()
}

type FindResponse_JsonResponse struct {
	JsonResponse string `protobuf:"bytes,30,opt,name=json_response,json=jsonResponse,proto3,oneof"`
}

func (*FindResponse_JsonResponse) isFindResponse_Data() {}

func (m *FindResponse) GetData() isFindResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *FindResponse) GetJsonResponse() string {
	if x, ok := m.GetData().(*FindResponse_JsonResponse); ok {
		return x.JsonResponse
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*FindResponse) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _FindResponse_OneofMarshaler, _FindResponse_OneofUnmarshaler, _FindResponse_OneofSizer, []interface{}{
		(*FindResponse_JsonResponse)(nil),
	}
}

func _FindResponse_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*FindResponse)
	// data
	switch x := m.Data.(type) {
	case *FindResponse_JsonResponse:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonResponse)
	case nil:
	default:
		return fmt.Errorf("FindResponse.Data has unexpected type %T", x)
	}
	return nil
}

func _FindResponse_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*FindResponse)
	switch tag {
	case 30: // data.json_response
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Data = &FindResponse_JsonResponse{x}
		return true, err
	default:
		return false, nil
	}
}

func _FindResponse_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*FindResponse)
	// data
	switch x := m.Data.(type) {
	case *FindResponse_JsonResponse:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonResponse)))
		n += len(x.JsonResponse)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateRequest struct {
	TablePath       string          `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	PayloadEncoding PayloadEncoding `protobuf:"varint,2,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	// Types that are valid to be assigned to Document:
	//	*UpdateRequest_JsonDocument
	Document isUpdateRequest_Document `protobuf_oneof:"document"`
	// Types that are valid to be assigned to Condition:
	//	*UpdateRequest_JsonCondition
	Condition isUpdateRequest_Condition `protobuf_oneof:"condition"`
	// Types that are valid to be assigned to Mutation:
	//	*UpdateRequest_JsonMutation
	Mutation             isUpdateRequest_Mutation `protobuf_oneof:"mutation"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *UpdateRequest) Reset()         { *m = UpdateRequest{} }
func (m *UpdateRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRequest) ProtoMessage()    {}
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{15}
}

func (m *UpdateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRequest.Unmarshal(m, b)
}
func (m *UpdateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRequest.Merge(m, src)
}
func (m *UpdateRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRequest.Size(m)
}
func (m *UpdateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRequest proto.InternalMessageInfo

func (m *UpdateRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

func (m *UpdateRequest) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

type isUpdateRequest_Document interface {
	isUpdateRequest_Document()
}

type UpdateRequest_JsonDocument struct {
	JsonDocument string `protobuf:"bytes,3,opt,name=json_document,json=jsonDocument,proto3,oneof"`
}

func (*UpdateRequest_JsonDocument) isUpdateRequest_Document() {}

func (m *UpdateRequest) GetDocument() isUpdateRequest_Document {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *UpdateRequest) GetJsonDocument() string {
	if x, ok := m.GetDocument().(*UpdateRequest_JsonDocument); ok {
		return x.JsonDocument
	}
	return ""
}

type isUpdateRequest_Condition interface {
	isUpdateRequest_Condition()
}

type UpdateRequest_JsonCondition struct {
	JsonCondition string `protobuf:"bytes,4,opt,name=json_condition,json=jsonCondition,proto3,oneof"`
}

func (*UpdateRequest_JsonCondition) isUpdateRequest_Condition() {}

func (m *UpdateRequest) GetCondition() isUpdateRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *UpdateRequest) GetJsonCondition() string {
	if x, ok := m.GetCondition().(*UpdateRequest_JsonCondition); ok {
		return x.JsonCondition
	}
	return ""
}

type isUpdateRequest_Mutation interface {
	isUpdateRequest_Mutation()
}

type UpdateRequest_JsonMutation struct {
	JsonMutation string `protobuf:"bytes,30,opt,name=json_mutation,json=jsonMutation,proto3,oneof"`
}

func (*UpdateRequest_JsonMutation) isUpdateRequest_Mutation() {}

func (m *UpdateRequest) GetMutation() isUpdateRequest_Mutation {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (m *UpdateRequest) GetJsonMutation() string {
	if x, ok := m.GetMutation().(*UpdateRequest_JsonMutation); ok {
		return x.JsonMutation
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*UpdateRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _UpdateRequest_OneofMarshaler, _UpdateRequest_OneofUnmarshaler, _UpdateRequest_OneofSizer, []interface{}{
		(*UpdateRequest_JsonDocument)(nil),
		(*UpdateRequest_JsonCondition)(nil),
		(*UpdateRequest_JsonMutation)(nil),
	}
}

func _UpdateRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*UpdateRequest)
	// document
	switch x := m.Document.(type) {
	case *UpdateRequest_JsonDocument:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonDocument)
	case nil:
	default:
		return fmt.Errorf("UpdateRequest.Document has unexpected type %T", x)
	}
	// condition
	switch x := m.Condition.(type) {
	case *UpdateRequest_JsonCondition:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonCondition)
	case nil:
	default:
		return fmt.Errorf("UpdateRequest.Condition has unexpected type %T", x)
	}
	// mutation
	switch x := m.Mutation.(type) {
	case *UpdateRequest_JsonMutation:
		b.EncodeVarint(30<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonMutation)
	case nil:
	default:
		return fmt.Errorf("UpdateRequest.Mutation has unexpected type %T", x)
	}
	return nil
}

func _UpdateRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*UpdateRequest)
	switch tag {
	case 3: // document.json_document
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Document = &UpdateRequest_JsonDocument{x}
		return true, err
	case 4: // condition.json_condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &UpdateRequest_JsonCondition{x}
		return true, err
	case 30: // mutation.json_mutation
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Mutation = &UpdateRequest_JsonMutation{x}
		return true, err
	default:
		return false, nil
	}
}

func _UpdateRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*UpdateRequest)
	// document
	switch x := m.Document.(type) {
	case *UpdateRequest_JsonDocument:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonDocument)))
		n += len(x.JsonDocument)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// condition
	switch x := m.Condition.(type) {
	case *UpdateRequest_JsonCondition:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonCondition)))
		n += len(x.JsonCondition)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// mutation
	switch x := m.Mutation.(type) {
	case *UpdateRequest_JsonMutation:
		n += 2 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonMutation)))
		n += len(x.JsonMutation)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type UpdateResponse struct {
	//*
	// `NO_ERROR` - if a document was updated successfully
	// `DOCUMENT_NOT_FOUND` - if a document with specified `_id` does not exist or the specified condition
	//                        evaluated to 'false'.
	Error                *RpcError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *UpdateResponse) Reset()         { *m = UpdateResponse{} }
func (m *UpdateResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateResponse) ProtoMessage()    {}
func (*UpdateResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{16}
}

func (m *UpdateResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateResponse.Unmarshal(m, b)
}
func (m *UpdateResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateResponse.Marshal(b, m, deterministic)
}
func (m *UpdateResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateResponse.Merge(m, src)
}
func (m *UpdateResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateResponse.Size(m)
}
func (m *UpdateResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateResponse proto.InternalMessageInfo

func (m *UpdateResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

type DeleteRequest struct {
	TablePath       string          `protobuf:"bytes,1,opt,name=table_path,json=tablePath,proto3" json:"table_path,omitempty"`
	PayloadEncoding PayloadEncoding `protobuf:"varint,2,opt,name=payload_encoding,json=payloadEncoding,proto3,enum=com.mapr.data.db.PayloadEncoding" json:"payload_encoding,omitempty"`
	// Types that are valid to be assigned to Condition:
	//	*DeleteRequest_JsonCondition
	Condition isDeleteRequest_Condition `protobuf_oneof:"condition"`
	// Types that are valid to be assigned to Document:
	//	*DeleteRequest_JsonDocument
	Document             isDeleteRequest_Document `protobuf_oneof:"document"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *DeleteRequest) Reset()         { *m = DeleteRequest{} }
func (m *DeleteRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRequest) ProtoMessage()    {}
func (*DeleteRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{17}
}

func (m *DeleteRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRequest.Unmarshal(m, b)
}
func (m *DeleteRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRequest.Merge(m, src)
}
func (m *DeleteRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRequest.Size(m)
}
func (m *DeleteRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRequest proto.InternalMessageInfo

func (m *DeleteRequest) GetTablePath() string {
	if m != nil {
		return m.TablePath
	}
	return ""
}

func (m *DeleteRequest) GetPayloadEncoding() PayloadEncoding {
	if m != nil {
		return m.PayloadEncoding
	}
	return PayloadEncoding_UNKNOWN_ENCODING
}

type isDeleteRequest_Condition interface {
	isDeleteRequest_Condition()
}

type DeleteRequest_JsonCondition struct {
	JsonCondition string `protobuf:"bytes,3,opt,name=json_condition,json=jsonCondition,proto3,oneof"`
}

func (*DeleteRequest_JsonCondition) isDeleteRequest_Condition() {}

func (m *DeleteRequest) GetCondition() isDeleteRequest_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *DeleteRequest) GetJsonCondition() string {
	if x, ok := m.GetCondition().(*DeleteRequest_JsonCondition); ok {
		return x.JsonCondition
	}
	return ""
}

type isDeleteRequest_Document interface {
	isDeleteRequest_Document()
}

type DeleteRequest_JsonDocument struct {
	JsonDocument string `protobuf:"bytes,4,opt,name=json_document,json=jsonDocument,proto3,oneof"`
}

func (*DeleteRequest_JsonDocument) isDeleteRequest_Document() {}

func (m *DeleteRequest) GetDocument() isDeleteRequest_Document {
	if m != nil {
		return m.Document
	}
	return nil
}

func (m *DeleteRequest) GetJsonDocument() string {
	if x, ok := m.GetDocument().(*DeleteRequest_JsonDocument); ok {
		return x.JsonDocument
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*DeleteRequest) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _DeleteRequest_OneofMarshaler, _DeleteRequest_OneofUnmarshaler, _DeleteRequest_OneofSizer, []interface{}{
		(*DeleteRequest_JsonCondition)(nil),
		(*DeleteRequest_JsonDocument)(nil),
	}
}

func _DeleteRequest_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*DeleteRequest)
	// condition
	switch x := m.Condition.(type) {
	case *DeleteRequest_JsonCondition:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonCondition)
	case nil:
	default:
		return fmt.Errorf("DeleteRequest.Condition has unexpected type %T", x)
	}
	// document
	switch x := m.Document.(type) {
	case *DeleteRequest_JsonDocument:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.JsonDocument)
	case nil:
	default:
		return fmt.Errorf("DeleteRequest.Document has unexpected type %T", x)
	}
	return nil
}

func _DeleteRequest_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*DeleteRequest)
	switch tag {
	case 3: // condition.json_condition
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Condition = &DeleteRequest_JsonCondition{x}
		return true, err
	case 4: // document.json_document
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.Document = &DeleteRequest_JsonDocument{x}
		return true, err
	default:
		return false, nil
	}
}

func _DeleteRequest_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*DeleteRequest)
	// condition
	switch x := m.Condition.(type) {
	case *DeleteRequest_JsonCondition:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonCondition)))
		n += len(x.JsonCondition)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	// document
	switch x := m.Document.(type) {
	case *DeleteRequest_JsonDocument:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.JsonDocument)))
		n += len(x.JsonDocument)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type DeleteResponse struct {
	//*
	// `NO_ERROR` - if a document was deleted successfully
	Error                *RpcError `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *DeleteResponse) Reset()         { *m = DeleteResponse{} }
func (m *DeleteResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteResponse) ProtoMessage()    {}
func (*DeleteResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_51c8fd5b2f2337d6, []int{18}
}

func (m *DeleteResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteResponse.Unmarshal(m, b)
}
func (m *DeleteResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteResponse.Marshal(b, m, deterministic)
}
func (m *DeleteResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteResponse.Merge(m, src)
}
func (m *DeleteResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteResponse.Size(m)
}
func (m *DeleteResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteResponse proto.InternalMessageInfo

func (m *DeleteResponse) GetError() *RpcError {
	if m != nil {
		return m.Error
	}
	return nil
}

func init() {
	proto.RegisterEnum("com.mapr.data.db.ErrorCode", ErrorCode_name, ErrorCode_value)
	proto.RegisterEnum("com.mapr.data.db.PayloadEncoding", PayloadEncoding_name, PayloadEncoding_value)
	proto.RegisterEnum("com.mapr.data.db.InsertMode", InsertMode_name, InsertMode_value)
	proto.RegisterEnum("com.mapr.data.db.FindResponseType", FindResponseType_name, FindResponseType_value)
	proto.RegisterType((*RpcError)(nil), "com.mapr.data.db.RpcError")
	proto.RegisterType((*PingRequest)(nil), "com.mapr.data.db.PingRequest")
	proto.RegisterType((*PingResponse)(nil), "com.mapr.data.db.PingResponse")
	proto.RegisterType((*CreateTableRequest)(nil), "com.mapr.data.db.CreateTableRequest")
	proto.RegisterType((*CreateTableResponse)(nil), "com.mapr.data.db.CreateTableResponse")
	proto.RegisterType((*DeleteTableRequest)(nil), "com.mapr.data.db.DeleteTableRequest")
	proto.RegisterType((*DeleteTableResponse)(nil), "com.mapr.data.db.DeleteTableResponse")
	proto.RegisterType((*TableExistsRequest)(nil), "com.mapr.data.db.TableExistsRequest")
	proto.RegisterType((*TableExistsResponse)(nil), "com.mapr.data.db.TableExistsResponse")
	proto.RegisterType((*InsertOrReplaceRequest)(nil), "com.mapr.data.db.InsertOrReplaceRequest")
	proto.RegisterType((*InsertOrReplaceResponse)(nil), "com.mapr.data.db.InsertOrReplaceResponse")
	proto.RegisterType((*FindByIdRequest)(nil), "com.mapr.data.db.FindByIdRequest")
	proto.RegisterType((*FindByIdResponse)(nil), "com.mapr.data.db.FindByIdResponse")
	proto.RegisterType((*FindRequest)(nil), "com.mapr.data.db.FindRequest")
	proto.RegisterType((*FindResponse)(nil), "com.mapr.data.db.FindResponse")
	proto.RegisterType((*UpdateRequest)(nil), "com.mapr.data.db.UpdateRequest")
	proto.RegisterType((*UpdateResponse)(nil), "com.mapr.data.db.UpdateResponse")
	proto.RegisterType((*DeleteRequest)(nil), "com.mapr.data.db.DeleteRequest")
	proto.RegisterType((*DeleteResponse)(nil), "com.mapr.data.db.DeleteResponse")
}

func init() { proto.RegisterFile("proto/maprdb-server.proto", fileDescriptor_51c8fd5b2f2337d6) }

var fileDescriptor_51c8fd5b2f2337d6 = []byte{
	// 1219 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x57, 0x4f, 0x73, 0xdb, 0xc4,
	0x1b, 0xb6, 0xe4, 0x34, 0x8d, 0x5f, 0xff, 0x89, 0xb2, 0x6d, 0x53, 0xd7, 0xbf, 0xfe, 0x49, 0xf5,
	0xa3, 0x10, 0x32, 0x10, 0x3a, 0xe9, 0x4c, 0x0f, 0xcc, 0x70, 0x90, 0xad, 0x6d, 0x2a, 0x6a, 0x4b,
	0xea, 0x5a, 0x06, 0x32, 0xc3, 0xcc, 0x8e, 0x62, 0xed, 0xb4, 0x2e, 0x8e, 0xa4, 0x4a, 0x4a, 0x87,
	0xdc, 0x38, 0xc0, 0x81, 0x0b, 0x0c, 0xb7, 0xf6, 0x0a, 0x5c, 0xf8, 0x18, 0x7c, 0x04, 0x3e, 0x04,
	0x1f, 0x81, 0x3b, 0xa3, 0x95, 0xa5, 0xc8, 0x91, 0x42, 0x53, 0x97, 0x99, 0x70, 0x93, 0x9f, 0x7d,
	0xde, 0x77, 0xf7, 0x7d, 0xf6, 0xdd, 0xdd, 0xc7, 0x70, 0xcd, 0x0f, 0xbc, 0xc8, 0xfb, 0xe8, 0xc0,
	0xf6, 0x03, 0x67, 0xff, 0xc3, 0x90, 0x05, 0x2f, 0x58, 0xb0, 0xcd, 0x31, 0x24, 0x8d, 0xbd, 0x83,
	0xed, 0x78, 0x60, 0xdb, 0xb1, 0x23, 0x7b, 0xdb, 0xd9, 0x97, 0x7f, 0x12, 0x60, 0x85, 0xf8, 0x63,
	0x1c, 0x04, 0x5e, 0x80, 0xee, 0xc3, 0x0a, 0x0b, 0x02, 0x3a, 0xf6, 0x1c, 0xd6, 0x16, 0x36, 0x84,
	0xcd, 0xd6, 0xce, 0xff, 0xb6, 0x4f, 0x46, 0x6c, 0x73, 0x6a, 0xcf, 0x73, 0x18, 0xb9, 0xc8, 0x02,
	0xfe, 0x81, 0xfe, 0x0f, 0x4d, 0x16, 0xa3, 0xf4, 0x80, 0x85, 0xa1, 0xfd, 0x84, 0xb5, 0xc5, 0x0d,
	0x61, 0xb3, 0x46, 0x1a, 0x1c, 0x1c, 0x24, 0x18, 0xda, 0x04, 0xe9, 0x99, 0xfd, 0xc2, 0xa6, 0x61,
	0x64, 0x8f, 0xbf, 0xa2, 0x51, 0x60, 0x8f, 0x59, 0xbb, 0xca, 0x79, 0xad, 0x18, 0x1f, 0xc6, 0xb0,
	0x15, 0xa3, 0x72, 0x13, 0xea, 0xe6, 0xc4, 0x7d, 0x42, 0xd8, 0xf3, 0x43, 0x16, 0x46, 0x72, 0x0b,
	0x1a, 0xc9, 0xcf, 0xd0, 0xf7, 0xdc, 0x90, 0xc9, 0xf7, 0x00, 0xf5, 0x02, 0x66, 0x47, 0xcc, 0xb2,
	0xf7, 0xa7, 0x6c, 0xc6, 0x42, 0x37, 0x00, 0xa2, 0xf8, 0x37, 0xf5, 0xed, 0xe8, 0x29, 0x5f, 0x7d,
	0x8d, 0xd4, 0x38, 0x62, 0xda, 0xd1, 0x53, 0x79, 0x17, 0x2e, 0xcd, 0x05, 0x25, 0xb9, 0xd0, 0x5d,
	0xb8, 0xc0, 0x17, 0xc9, 0x03, 0xea, 0x3b, 0x9d, 0x62, 0xb9, 0xa9, 0x38, 0x24, 0x21, 0xc6, 0xb3,
	0xab, 0x6c, 0xca, 0xde, 0x78, 0xf6, 0xb9, 0xa0, 0xb7, 0x99, 0x9d, 0xa7, 0xc0, 0x5f, 0x4f, 0xc2,
	0x28, 0x3c, 0xfb, 0xec, 0x73, 0x41, 0x0b, 0xcf, 0xfe, 0x9b, 0x08, 0xeb, 0x9a, 0x1b, 0xb2, 0x20,
	0x32, 0x02, 0xc2, 0xfc, 0xa9, 0x3d, 0x3e, 0xa3, 0x00, 0xe8, 0x13, 0xa8, 0x4f, 0x78, 0x20, 0x3d,
	0x88, 0x9b, 0x4b, 0xe4, 0xcd, 0x75, 0xbd, 0x38, 0x63, 0x92, 0x7d, 0x10, 0x77, 0x17, 0x4c, 0xb2,
	0x6f, 0xd4, 0x07, 0xc9, 0xb7, 0x8f, 0xa6, 0x9e, 0xed, 0x50, 0xe6, 0x8e, 0x3d, 0x67, 0xe2, 0x3e,
	0xe1, 0xbd, 0xd3, 0xda, 0xb9, 0x5d, 0xcc, 0x61, 0x26, 0x4c, 0x3c, 0x23, 0x92, 0x55, 0x7f, 0x1e,
	0x40, 0xef, 0x41, 0xeb, 0x59, 0xe8, 0xb9, 0x74, 0xec, 0xb9, 0xce, 0x24, 0x9a, 0x78, 0x6e, 0x7b,
	0x29, 0x5e, 0xef, 0xc3, 0x0a, 0x69, 0xc6, 0x78, 0x2f, 0x85, 0xd1, 0x1d, 0xe0, 0x00, 0x75, 0xbc,
	0xf1, 0xe1, 0x01, 0x73, 0xa3, 0xf6, 0x4d, 0xce, 0x13, 0x48, 0x23, 0x86, 0xd5, 0x19, 0xda, 0xad,
	0x43, 0x2d, 0x4b, 0xd5, 0x5d, 0x86, 0xa5, 0x78, 0x21, 0xf2, 0x23, 0xb8, 0x5a, 0x90, 0x6a, 0x61,
	0xe1, 0xbf, 0x17, 0x61, 0xf5, 0xc1, 0xc4, 0x75, 0xba, 0x47, 0x9a, 0x73, 0x46, 0xc5, 0xcb, 0x24,
	0x13, 0x17, 0x96, 0x6c, 0x03, 0xea, 0x7e, 0xe0, 0x3d, 0x63, 0xe3, 0xb8, 0xc6, 0xb0, 0x5d, 0xdd,
	0xa8, 0x6e, 0xd6, 0x48, 0x1e, 0x7a, 0x0b, 0x51, 0x2f, 0xbc, 0x5e, 0x54, 0x80, 0x95, 0x94, 0x2e,
	0xff, 0x2e, 0x80, 0x74, 0xac, 0xc5, 0xa2, 0x92, 0xfe, 0xcb, 0xfa, 0x9c, 0xd2, 0x29, 0x95, 0x13,
	0x45, 0xa5, 0xcd, 0xf1, 0x87, 0x00, 0xf5, 0xb8, 0x86, 0x73, 0xd9, 0xcb, 0x0f, 0x00, 0x4d, 0xdc,
	0xf1, 0xf4, 0xd0, 0x61, 0xf4, 0xf9, 0x21, 0x0b, 0x8e, 0xa8, 0x3f, 0xb5, 0x5d, 0x7e, 0x9c, 0x56,
	0x88, 0x34, 0x1b, 0x79, 0x1c, 0x0f, 0x98, 0x53, 0xdb, 0x45, 0xb7, 0x00, 0x78, 0x65, 0x9c, 0x9a,
	0xed, 0x69, 0x2d, 0xc6, 0x38, 0x29, 0xab, 0xe9, 0x2f, 0x01, 0x1a, 0x49, 0x4d, 0xff, 0x91, 0x3d,
	0xb9, 0x0f, 0x4b, 0xd1, 0x91, 0xcf, 0x66, 0x17, 0x85, 0x5c, 0xcc, 0x90, 0x5f, 0xad, 0x75, 0xe4,
	0x33, 0xc2, 0xf9, 0xd9, 0x5e, 0x06, 0xb3, 0xa1, 0xf9, 0xbd, 0x4c, 0x03, 0xb2, 0xba, 0x5f, 0x8a,
	0xd0, 0x1c, 0xf9, 0x8e, 0x1d, 0xb1, 0x73, 0xd9, 0xcd, 0x42, 0xe7, 0x55, 0xcb, 0x3a, 0xef, 0xd4,
	0xe3, 0x29, 0x9c, 0x76, 0x3c, 0x0f, 0x0e, 0x23, 0x9b, 0xf3, 0x92, 0xea, 0xc5, 0x24, 0xdf, 0x60,
	0x86, 0xe6, 0x4f, 0x64, 0xe1, 0xa8, 0xa6, 0xa1, 0x72, 0x17, 0x5a, 0xa9, 0x32, 0x0b, 0x5f, 0x7d,
	0x7f, 0x0a, 0xd0, 0x4c, 0xde, 0xce, 0x73, 0x91, 0xb7, 0xa8, 0x5b, 0xf5, 0x8c, 0xd7, 0xda, 0xd2,
	0x9b, 0x5d, 0x6b, 0x5d, 0x68, 0xa5, 0x65, 0x2e, 0xaa, 0xd5, 0xd6, 0x77, 0x55, 0xa8, 0x65, 0xf6,
	0x0c, 0x35, 0x60, 0x45, 0x37, 0x28, 0x26, 0xc4, 0x20, 0x52, 0x05, 0x5d, 0x82, 0x55, 0x4b, 0xe9,
	0xf6, 0x31, 0xd5, 0x0d, 0x8b, 0x3e, 0x30, 0x46, 0xba, 0x2a, 0x89, 0x31, 0x45, 0x4b, 0x29, 0x17,
	0xd0, 0x1a, 0x34, 0x8d, 0x91, 0x45, 0x8d, 0x07, 0x74, 0x80, 0x07, 0x06, 0xd9, 0x93, 0x1a, 0x31,
	0xa4, 0xf4, 0x7a, 0x78, 0x38, 0xa4, 0x2a, 0xd6, 0x35, 0xac, 0x4a, 0x4d, 0xd4, 0x86, 0xcb, 0x49,
	0x22, 0xa5, 0x4f, 0xb0, 0xa2, 0xee, 0x51, 0xfc, 0x85, 0x36, 0xb4, 0x86, 0xd2, 0x1a, 0xba, 0x0c,
	0x92, 0xa6, 0x7f, 0xa6, 0xf4, 0x35, 0x95, 0x2a, 0x64, 0x77, 0x34, 0xc0, 0xba, 0x25, 0xad, 0xa3,
	0x6b, 0x70, 0x65, 0xa4, 0x0f, 0x47, 0xa6, 0x69, 0x10, 0x0b, 0xab, 0xd4, 0x30, 0x31, 0x51, 0x2c,
	0xcd, 0xd0, 0xa5, 0x77, 0x11, 0x82, 0xe6, 0x48, 0x7f, 0xa4, 0x1b, 0x9f, 0xeb, 0xb3, 0x35, 0x7c,
	0x23, 0xa2, 0x1b, 0xd0, 0x4e, 0x31, 0x53, 0xd9, 0xeb, 0x1b, 0x8a, 0x4a, 0xb1, 0xde, 0x33, 0x54,
	0x4d, 0xdf, 0x95, 0xbe, 0x15, 0xd1, 0x3a, 0xac, 0xf5, 0xfa, 0xa3, 0xa1, 0x85, 0x49, 0xae, 0x90,
	0x1f, 0x44, 0x74, 0x09, 0x5a, 0xa6, 0x62, 0x3d, 0xcc, 0x81, 0x3f, 0x8a, 0xe8, 0x3a, 0x5c, 0x55,
	0x8d, 0x1e, 0x5f, 0xc8, 0xc9, 0xd5, 0xbe, 0x14, 0xd1, 0x55, 0x40, 0xd9, 0xe8, 0x71, 0xd8, 0x2b,
	0x9e, 0x2b, 0x9d, 0x72, 0xb6, 0xae, 0x9f, 0x39, 0xa8, 0xe2, 0x39, 0xf0, 0x17, 0x11, 0x5d, 0x01,
	0x49, 0xeb, 0xf7, 0xf1, 0xae, 0xd2, 0xa7, 0x83, 0x91, 0x95, 0x94, 0xf5, 0xab, 0xb8, 0xf5, 0x31,
	0xac, 0x9e, 0x68, 0xac, 0x58, 0x9b, 0xac, 0xd4, 0xb4, 0x9c, 0x4a, 0x2c, 0xef, 0xa7, 0x43, 0x23,
	0x07, 0x09, 0x5b, 0x3a, 0xc0, 0xb1, 0x09, 0x42, 0x12, 0x34, 0xd2, 0xb0, 0x81, 0xa1, 0x62, 0xa9,
	0x82, 0xae, 0xc0, 0x9a, 0xa6, 0x0f, 0x31, 0xb1, 0xa8, 0x41, 0x28, 0xc1, 0x66, 0x5f, 0xe9, 0x61,
	0x49, 0x40, 0x00, 0xcb, 0x09, 0x2c, 0x89, 0xa8, 0x0e, 0x17, 0xd3, 0x81, 0xea, 0x96, 0x96, 0xbc,
	0x96, 0xf9, 0x7b, 0x2e, 0x9f, 0xd5, 0xda, 0x33, 0x71, 0xd2, 0x1d, 0x04, 0x0f, 0x47, 0x7d, 0x8b,
	0xa6, 0x92, 0x48, 0x02, 0x6a, 0x01, 0x3c, 0x1e, 0x61, 0xb2, 0x47, 0xcd, 0xbe, 0xa2, 0x4b, 0xe2,
	0xce, 0xab, 0x65, 0x68, 0x0c, 0x6c, 0x9f, 0xa8, 0xfb, 0x43, 0xfe, 0xa7, 0x02, 0xed, 0xc2, 0x52,
	0xec, 0xcc, 0xd1, 0x8d, 0x92, 0x83, 0x75, 0x6c, 0xe0, 0x3b, 0x37, 0x4f, 0x1b, 0x9e, 0x19, 0xfa,
	0x0a, 0xfa, 0x12, 0xea, 0x39, 0x77, 0x8e, 0xde, 0x29, 0x06, 0x14, 0x1d, 0x7f, 0xe7, 0xce, 0x6b,
	0x58, 0xf9, 0xec, 0x39, 0xf7, 0x5d, 0x96, 0xbd, 0xe8, 0xe8, 0xcb, 0xb2, 0x97, 0x58, 0xf8, 0x24,
	0x7b, 0xce, 0x5d, 0x97, 0x65, 0x2f, 0x3a, 0xf6, 0xb2, 0xec, 0x25, 0x16, 0x5d, 0xae, 0xa0, 0xa7,
	0xb0, 0x7a, 0xc2, 0x46, 0xa2, 0xcd, 0xd3, 0x6c, 0xf3, 0x49, 0x53, 0xde, 0x79, 0xff, 0x0c, 0xcc,
	0x6c, 0xa6, 0x21, 0xac, 0xa4, 0xb6, 0x0a, 0xdd, 0x2e, 0x7f, 0x2c, 0x73, 0xf6, 0xb3, 0x23, 0xff,
	0x13, 0x25, 0x4b, 0xaa, 0xc1, 0x52, 0x8c, 0x96, 0x75, 0x48, 0xce, 0xff, 0x94, 0x75, 0x48, 0xbe,
	0x69, 0xe5, 0xca, 0x5d, 0x01, 0x0d, 0x60, 0x39, 0x79, 0x4c, 0xd0, 0xad, 0x22, 0x7b, 0xee, 0x01,
	0xee, 0x6c, 0x9c, 0x4e, 0xc8, 0x56, 0x36, 0x80, 0xe5, 0x64, 0x3f, 0xcb, 0xd2, 0xcd, 0x3d, 0x38,
	0x65, 0xe9, 0xe6, 0xaf, 0x6a, 0xb9, 0xd2, 0xed, 0xc0, 0x7a, 0x81, 0xc4, 0xff, 0x73, 0x9b, 0xc2,
	0xfe, 0x32, 0xff, 0xb8, 0xf7, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbb, 0xb9, 0x6f, 0xff, 0x99,
	0x0f, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// MapRDbServerClient is the client API for MapRDbServer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MapRDbServerClient interface {
	// Ping RPC
	Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error)
	// Admin RPCs
	CreateTable(ctx context.Context, in *CreateTableRequest, opts ...grpc.CallOption) (*CreateTableResponse, error)
	DeleteTable(ctx context.Context, in *DeleteTableRequest, opts ...grpc.CallOption) (*DeleteTableResponse, error)
	TableExists(ctx context.Context, in *TableExistsRequest, opts ...grpc.CallOption) (*TableExistsResponse, error)
	// CRUD RPCs
	InsertOrReplace(ctx context.Context, in *InsertOrReplaceRequest, opts ...grpc.CallOption) (*InsertOrReplaceResponse, error)
	FindById(ctx context.Context, in *FindByIdRequest, opts ...grpc.CallOption) (*FindByIdResponse, error)
	Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (MapRDbServer_FindClient, error)
	Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error)
	Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error)
}

type mapRDbServerClient struct {
	cc *grpc.ClientConn
}

func NewMapRDbServerClient(cc *grpc.ClientConn) MapRDbServerClient {
	return &mapRDbServerClient{cc}
}

func (c *mapRDbServerClient) Ping(ctx context.Context, in *PingRequest, opts ...grpc.CallOption) (*PingResponse, error) {
	out := new(PingResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/Ping", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) CreateTable(ctx context.Context, in *CreateTableRequest, opts ...grpc.CallOption) (*CreateTableResponse, error) {
	out := new(CreateTableResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/CreateTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) DeleteTable(ctx context.Context, in *DeleteTableRequest, opts ...grpc.CallOption) (*DeleteTableResponse, error) {
	out := new(DeleteTableResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/DeleteTable", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) TableExists(ctx context.Context, in *TableExistsRequest, opts ...grpc.CallOption) (*TableExistsResponse, error) {
	out := new(TableExistsResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/TableExists", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) InsertOrReplace(ctx context.Context, in *InsertOrReplaceRequest, opts ...grpc.CallOption) (*InsertOrReplaceResponse, error) {
	out := new(InsertOrReplaceResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/InsertOrReplace", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) FindById(ctx context.Context, in *FindByIdRequest, opts ...grpc.CallOption) (*FindByIdResponse, error) {
	out := new(FindByIdResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/FindById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (MapRDbServer_FindClient, error) {
	stream, err := c.cc.NewStream(ctx, &_MapRDbServer_serviceDesc.Streams[0], "/com.mapr.data.db.MapRDbServer/Find", opts...)
	if err != nil {
		return nil, err
	}
	x := &mapRDbServerFindClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type MapRDbServer_FindClient interface {
	Recv() (*FindResponse, error)
	grpc.ClientStream
}

type mapRDbServerFindClient struct {
	grpc.ClientStream
}

func (x *mapRDbServerFindClient) Recv() (*FindResponse, error) {
	m := new(FindResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *mapRDbServerClient) Update(ctx context.Context, in *UpdateRequest, opts ...grpc.CallOption) (*UpdateResponse, error) {
	out := new(UpdateResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *mapRDbServerClient) Delete(ctx context.Context, in *DeleteRequest, opts ...grpc.CallOption) (*DeleteResponse, error) {
	out := new(DeleteResponse)
	err := c.cc.Invoke(ctx, "/com.mapr.data.db.MapRDbServer/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MapRDbServerServer is the server API for MapRDbServer service.
type MapRDbServerServer interface {
	// Ping RPC
	Ping(context.Context, *PingRequest) (*PingResponse, error)
	// Admin RPCs
	CreateTable(context.Context, *CreateTableRequest) (*CreateTableResponse, error)
	DeleteTable(context.Context, *DeleteTableRequest) (*DeleteTableResponse, error)
	TableExists(context.Context, *TableExistsRequest) (*TableExistsResponse, error)
	// CRUD RPCs
	InsertOrReplace(context.Context, *InsertOrReplaceRequest) (*InsertOrReplaceResponse, error)
	FindById(context.Context, *FindByIdRequest) (*FindByIdResponse, error)
	Find(*FindRequest, MapRDbServer_FindServer) error
	Update(context.Context, *UpdateRequest) (*UpdateResponse, error)
	Delete(context.Context, *DeleteRequest) (*DeleteResponse, error)
}

func RegisterMapRDbServerServer(s *grpc.Server, srv MapRDbServerServer) {
	s.RegisterService(&_MapRDbServer_serviceDesc, srv)
}

func _MapRDbServer_Ping_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).Ping(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/Ping",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).Ping(ctx, req.(*PingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_CreateTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).CreateTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/CreateTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).CreateTable(ctx, req.(*CreateTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_DeleteTable_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteTableRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).DeleteTable(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/DeleteTable",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).DeleteTable(ctx, req.(*DeleteTableRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_TableExists_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TableExistsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).TableExists(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/TableExists",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).TableExists(ctx, req.(*TableExistsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_InsertOrReplace_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InsertOrReplaceRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).InsertOrReplace(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/InsertOrReplace",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).InsertOrReplace(ctx, req.(*InsertOrReplaceRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_FindById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindByIdRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).FindById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/FindById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).FindById(ctx, req.(*FindByIdRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_Find_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(FindRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(MapRDbServerServer).Find(m, &mapRDbServerFindServer{stream})
}

type MapRDbServer_FindServer interface {
	Send(*FindResponse) error
	grpc.ServerStream
}

type mapRDbServerFindServer struct {
	grpc.ServerStream
}

func (x *mapRDbServerFindServer) Send(m *FindResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _MapRDbServer_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).Update(ctx, req.(*UpdateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MapRDbServer_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MapRDbServerServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/com.mapr.data.db.MapRDbServer/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MapRDbServerServer).Delete(ctx, req.(*DeleteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MapRDbServer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "com.mapr.data.db.MapRDbServer",
	HandlerType: (*MapRDbServerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Ping",
			Handler:    _MapRDbServer_Ping_Handler,
		},
		{
			MethodName: "CreateTable",
			Handler:    _MapRDbServer_CreateTable_Handler,
		},
		{
			MethodName: "DeleteTable",
			Handler:    _MapRDbServer_DeleteTable_Handler,
		},
		{
			MethodName: "TableExists",
			Handler:    _MapRDbServer_TableExists_Handler,
		},
		{
			MethodName: "InsertOrReplace",
			Handler:    _MapRDbServer_InsertOrReplace_Handler,
		},
		{
			MethodName: "FindById",
			Handler:    _MapRDbServer_FindById_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _MapRDbServer_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _MapRDbServer_Delete_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Find",
			Handler:       _MapRDbServer_Find_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "proto/maprdb-server.proto",
}
